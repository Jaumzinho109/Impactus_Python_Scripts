import streamlit as st
import matplotlib.pyplot as plt
from streamlit_option_menu import option_menu
from variaveis_dashboard import get_pce_figures, get_cpi_figures, get_ppi_figures
from atividade_dados import get_economic_activity_figures
from ppi import get_employment_figures
from juros_e_pm import get_interest_figures, get_monetary_policy_figures

# Configura칞칚o inicial da p치gina
st.set_page_config(
    page_title="Central de Dados - EUA",
    layout="wide",
    initial_sidebar_state="expanded"
)

# ---- SIDEBAR ----
with st.sidebar:
    st.markdown("## Central de Dados Econ칪micos US")
    st.markdown("Este site apresenta dados econ칪micos dos EUA e an치lises em rela칞칚o a seus impactos macroecon칪micos.")
    
    st.markdown("### 游댕 Links 칔teis")
    st.markdown("- [BEA - Site Oficial](https://www.bea.gov/)")
    st.markdown("- [Federal Reserve of St. Louis](https://www.federalreserve.gov/)")
    st.markdown("- [GitHub do Projeto](https://github.com/Jaumzinho109/Impactus_Python_Scripts/blob/main/PCE_data/PCE_Headline.py)")

# ---- CABE칂ALHO ----
st.title("US Data Base")

# ---- MENU PRINCIPAL ----
menu = option_menu(
    menu_title=None,
    options=["Mercado de Trabalho", "Infla칞칚o", "Atividade Econ칪mica", "Pol칤tica Monet치ria e Juros"],
    icons=["briefcase", "graph-up", "bar-chart", "bank"],
    default_index=0,
    orientation="horizontal",
)

# Fun칞칚o auxiliar para exibir gr치ficos
def display_figures(figures, cols_per_row=2):
    cols = st.columns(cols_per_row)
    for i, fig in enumerate(figures):
        with cols[i % cols_per_row]:
            st.pyplot(fig)
            plt.close(fig)

# ---- SE칂츾O DE INFLA칂츾O ----
if menu == "Infla칞칚o":
    st.header("Infla칞칚o")
    
    subtema = option_menu(
        "Selecione o Subtema (Infla칞칚o)",
        ["PCE", "CPI", "PPI"],
        default_index=0
    )

    if subtema == "PCE":
        st.write("O dado cheio do PCE avan칞ou 0,33% m/m em janeiro...")
        pce_figures = get_pce_figures()
        display_figures(pce_figures)

    elif subtema == "CPI":
        cpi_figures = get_cpi_figures()
        display_figures(cpi_figures)

    elif subtema == "PPI":
        ppi_figures = get_ppi_figures()
        display_figures(ppi_figures)

# ---- SE칂츾O DE MERCADO DE TRABALHO ----
elif menu == "Mercado de Trabalho":
    st.write("A cria칞칚o l칤quida de empregos no Payroll foi de 151 mil...")
    
    subtema_trabalho = option_menu(
        menu_title=None,
        options=["Payroll", "Emprego", "Sal치rios"],
        default_index=0,
        orientation="horizontal"
    )
    
    employment_figures = get_employment_figures(subtema_trabalho)
    display_figures(employment_figures)

# ---- SE칂츾O DE POL칈TICA MONET츼RIA ----
elif menu == 'Pol칤tica Monet치ria e Juros':
    subtema_pm = option_menu(
        menu_title=None,
        options=["Juros de T칤tulos P칰blicos", "Dados de Pol칤tica Monet치ria"],
        default_index=0,
        orientation="horizontal"
    )
    
    if subtema_pm == 'Juros de T칤tulos P칰blicos':
        interest_figures = get_interest_figures()
        display_figures(interest_figures)
    else:
        policy_figures = get_monetary_policy_figures()
        display_figures(policy_figures)

# ---- SE칂츾O DE ATIVIDADE ECON칎MICA ----
elif menu == "Atividade Econ칪mica":
    subtema_atividade = option_menu(
        menu_title=None,
        options=["Renda", "Consumo", "Vendas no Varejo", "PIB"],
        default_index=0,
        orientation="horizontal"
    )
    
    economic_figures = get_economic_activity_figures(subtema_atividade)
    display_figures(economic_figures)